components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
        avatar:
          type: string
        password:
          type: string
        coin:
          type: number
          minimum: 0
          maximum: 999999
        numberOfStars:
          type: number
          minimum: 0
          maximum: 999
        flashcards:
          type: array
          items:
            $ref: '#/components/schemas/Flashcard'
        verifyCode:
          type: object
          properties:
            code:
              type: number
            updatedAt:
              type: Date
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: Date
        type:
          type: string,
          enum: [refresh]
        user:
          type: ObjectId
          $ref: '#/components/schemas/User'
    Flashcard:
      type: object
      properties:
        name:
          type: string
        picture:
          type: string
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
        sentences:
          type: array
          items:
            $ref: '#/components/schemas/Sentence'
        stars:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Sentence:
      type: object
      properties:
        content:
          type: string
        mean:
          type: string
        stars:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Word:
      type: object
      properties:
        content:
          type: string
        type:
          type: string
          enum: ['n', 'adj', 'adv', 'v', 'con', 'pre', 'pro', 'det']
        mean:
          type: string
        example:
          type: string
        synonyms:
          type: array
          items:
            $ref: '#/components/schemas/Word'
        antonyms:
          type: array
          items:
            $ref: '#/components/schemas/Word'
        picture:
          type: string
        phonetic:
          type: string
        star:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Topic:
      type: object
      properties:
        title:
          type: string
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
        sentences:
          type: array
          items:
            $ref: '#/components/schemas/Sentence'
        icon:
          type: string
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  # responses:
  #   DuplicateEmail:
  #     description: Email already taken
  #     content:
  #       application/json:
  #         schema:
  #           $ref: '#/components/schemas/Error'
  #         example:
  #           code: 400
  #           message: Email already taken
  #   Unauthorized:
  #     description: Unauthorized
  #     content:
  #       application/json:
  #         schema:
  #           $ref: '#/components/schemas/Error'
  #         example:
  #           code: 401
  #           message: Please authenticate
  #   Forbidden:
  #     description: Forbidden
  #     content:
  #       application/json:
  #         schema:
  #           $ref: '#/components/schemas/Error'
  #         example:
  #           code: 403
  #           message: Forbidden
  #   NotFound:
  #     description: Not found
  #     content:
  #       application/json:
  #         schema:
  #           $ref: '#/components/schemas/Error'
  #         example:
  #           code: 404
  #           message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
